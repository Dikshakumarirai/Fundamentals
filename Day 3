DSA
Describe the types of data structure?
  Two types of data structure:-
  Linear and Nonlinear data structure 
  Linear:-Araays, Linked list, Stack, Queues.
  Non linear:- Tree, Grap, Tables, Sets
  Linear Data Structure:
  A data structure that includes data elements arranged sequentially or linearly,
  where each element is connected to its previous and next nearest elements, is referred to as a linear data structure.
  Arrays and linked lists are two examples of linear data structures.
Non-Linear Data Structure:
Non-linear data structures are data structures in which data elements are not arranged linearly or sequentially. 
We cannot walk through all elements in one pass in a non-linear data structure, as in a linear data structure.
Trees and graphs are two examples of non-linear data structures.

What is a stack data structure? 
A stack is a data structure that is used to represent the state of an application at a particular point in time. 
The stack consists of a series of items that are added to the top of the stack and then removed from the top.
It is a linear data structure that follows a particular order in which operations are performed.
LIFO (Last In First Out) or FILO (First In Last Out) are two possible orders.
A stack consists of a sequence of items. The element that's added last will come out first.

What are the applications of stack?
following are some applications for stack data structure:

It acts as temporary storage during recursive operations
Redo and Undo operations in doc editors
Reversing a string
Parenthesis matching
Postfix to Infix Expressions
Function calls order
JAVA

 How is Java different from C++?
C++ is only a  compiled language, whereas Java is compiled as well as an interpreted language.
Java programs are machine-independent whereas a c++ program can run only in the machine in which it is compiled. 
C++ allows users to use pointers in the program. Whereas java doesnâ€™t allow it. Java internally uses pointers. 
C++ supports the concept of Multiple inheritances whereas Java doesn't support this.
And it is due to avoiding the complexity of name ambiguity that causes the diamond problem.
6. Pointers are used in C/ C++. Why does Java not make use of pointers?
Pointers are quite complicated and unsafe to use by beginner programmers.
Java focuses on code simplicity, and the usage of pointers can make it challenging. Pointer utilization can also cause potential errors. 
Moreover, security is also compromised if pointers are used because the users can directly access memory with the help of pointers.

Thus, a certain level of abstraction is furnished by not including pointers in Java. Moreover, 
the usage of pointers can make the procedure of garbage collection quite slow and erroneous.
Java makes use of references as these cannot be manipulated, unlike pointers.
